#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>

const char* ssid = "qwertyuio";
const char* password = "1234567890";

const char* server = "api.thingspeak.com";
const String apiKey = "J2OPHM1CL3V297Q1";
const unsigned long channelID = 2987639;
const int trigPin = 5;   
const int echoPin = 4;   


const int ledPin = 2;    
const float MIN_DISTANCE = 10.0; 

void setup() {
  Serial.begin(115200);
  delay(10);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, HIGH);  

  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

float measureDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH, 30000); 
  if (duration == 0) {
    Serial.println("Error: No echo detected");
    return -1;  
  }
  float distance = duration * 0.0343 / 2;  
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");
  return distance;
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    float distance = measureDistance();

    if (distance >= 0) {  
      if (distance < MIN_DISTANCE) {
        digitalWrite(ledPin, LOW);   
        Serial.println("Object too close! LED ON");
      } else {
        digitalWrite(ledPin, HIGH);  
      }

      WiFiClient client;
      HTTPClient http;
      String url = "http://" + String(server) + "/update?api_key=" + apiKey;
      url += "&field1=" + String(distance);

      http.begin(client, url);
      int httpCode = http.GET();

      if (httpCode == HTTP_CODE_OK) {
        Serial.println("Data sent to ThingSpeak!");
      } else {
        Serial.print("HTTP Error: ");
        Serial.println(httpCode);
      }
      http.end();
    }
  } else {
    Serial.println("WiFi disconnected. Reconnecting...");
    WiFi.begin(ssid, password);
  }
  delay(5000); 
}